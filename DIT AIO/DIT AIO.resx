<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageList1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAiIiQAIiIkGCEhI4McHB6SHBwekRwcHpEcHB6RHBwekRwcHpEcHB6RHBwekRwc
        HpEcHB6RHBwekRwcHpEcHB6RHBwekR8fIY8iIiQ0IiIkACIgIgAiISM5IB4fkiEgIWcjJCcFIiIkAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAACIiJAAcHB44Ozo88oWEhP+KiYn/iomJ/4qJif+KiYn/iomJ/4qJ
        if+KiYn/iomJ/4qJif+KiYn/iomJ/4qJif+Lior/T09Q/x4eIHUgHiBZHxscdCQmKMU9Xmn/LDo/6x8b
        HIIgHR50IiEjHyIhIwAiIiQAAAAAAAAAAAAAAAAAIiIkABkZGyw/P0DotrWz/87Nyv/NzMn/z87L/87M
        yv/OzMr/zszK/87Myv/OzMr/zszK/8/Ny//Ozcr/zczJ/8fFw/9cW1z5Hh0fty8+RPBBaHT/UYye/2W7
        0/9aobb/RXF//zhTXP8jJCalISAhCCIiJAAAAAAAAAAAAAAAAAAiIiQAIiIkBSIiJG0uLi/JNTU20jQ0
        Ndc1NDb5RkRH/0lHSv9JR0r/SUdK/0lHSv9IRkn/ODc5/jQzNd81NTbSMTEzzyQkJoofGxyAP2Nu/2e/
        1/9BZXD/RFBV/z9UXP9Zn7P/WZ2w/yMlJ74gHh8KIiIkAAAAAAAAAAAAAAAAAAAAAAAZGRsAGhsdARIS
        FQoPDxINFhcZKTAvMt6Mg43/n5Sf/56Tnv+ek57/npOe/5qPmv9DQEX5GRkbUgsLDwsPDxILISAiMSQm
        KMVQi5z/QmZy/4OAf//Y1dP/sq+t/0NOUv9YnrL/L0BG7SEfIWciISMDIiIkACcnKQIaGhwrFxcZURcX
        GVMXFxlTFxcZUhcXGVAYGBpkKSgr52xmbv96cnv/eXF6/3lxev95cXr/dm53/zc1OfsZGRuBFxcZThcX
        GU8bGRuhOlpk/2a91f9CUFX/1NHP//Xz8P/z8e7/bGtr/1SWqf9UkqT/JCcqxR8cHQ4hISMAHx8hUDo6
        O+JiYWL8ZWRl/GVkZfxlZGX8ZWRl/GVkZfxkZGT/ZmVm/2ZlZv9mZWb/ZmVm/2ZlZv9mZWb/ZWRl/2Vk
        Zf1lZGX8ZWRl/GFgYP09R0r/WJ2x/z9YYf+ppaP/8e/s/9fU0v9QVFb/V5uw/zpYYfsiISOUIR8gBxcX
        GggoKCm0pKOi//Px7v/y8O3/8vDt//Lw7f/y8O3/8vDt//Lw7f/y8O3/8vDt//Lw7f/y8O3/8vDt//Lw
        7f/y8O3/8vDt//Lw7f/y8O3/8/Hu/5CNjP9BanX/XKe7/0FPVP9lZWb/TlNV/0t8i/9an7L/JCcqxR8c
        HRIiISMAFRUYDzExMsWurav/rayr/6alpP+mpaT/pqWk/6alpP+mpaT/pqWk/6alpP+npqX/qain/6mo
        p/+op6X/pqWk/6alpP+mpaT/pqWk/6alpP+op6b/ZmVl/zJKU/9WmKv/WJ6y/1acsP9YnrL/WJuv/0Zz
        gf8jJCe7IR8hCiIiJAAVFRgPNDQ1xnV1df9EQUD/b2lj/29pY/9vaWP/b2lj/29pY/9wamT/cWpl/15Z
        Vv9EQUD/QD09/1ZST/9uaGP/cWpk/29pY/9vaWP/b2lj/29pY/9vaGP/TklF/zU1N/82Qkf/UIqc/zlW
        YPgkJSi/IiMltSIiJEMiIiQAIiIkABUVGA80NDXGcG9v/3hxa//869f//OvX//zr1//869f//ezY//Tj
        0P+glov/TEhG/y4uLv8sKyz/Pz08/4V9df/m1sT//uzY//zr1//869f//OvX///u2f+mlof/YWBh/0dG
        R/sgIiXOIiEjkiAdHhEhICEIIiIkASIiJAAAAAAAFRUYDzQ0NcZwb3D/eHJr//7s2P/+7Nj//uzY//7s
        2P/459T/hn52/ycnJ/8mJSX/RDw0/0A5Mv8vLCr/IyIk/19bV//o2cf//+3Z//7s2P/+7Nj//+/a/6eY
        iP9iYmL/S0pM7hcWGDcfGx0DHBYXACIiJAAAAAAAAAAAAAAAAAAVFRgPNDQ1xnBvcP94cmv//uzY//7s
        2P/+7Nj//+/a/7mtoP9SSD3/T0Q4/z03Mf9BOjL/NzIu/0c+Nf8+NzH/Wkw9/4yEe//+7Nj//uzY//7s
        2P//79r/p5iI/2JiYv9LS0ztFRUYLyIiJAAAAAAAAAAAAAAAAAAAAAAAAAAAABUVGA80NDXGcG9w/3hy
        a//+7Nj//uzY//7s2P/969f/dG1n/5F2Vv9jU0L/uZVq/5l9W/9tW0f/1qt3/1lMPv+ig17/WVJL/+va
        yf//7dn//uzY///v2v+nmIj/YmJi/0tLTO0VFRgvIiIkAAAAAAAAAAAAAAAAAAAAAAAAAAAAFRUYDzQ0
        NcZwb3D/eHJr//7s2P/+7Nj//+3Y//Xk0f9ZVFD/TUI3/zUwLf9hUkH/T0Q5/z84Mf9pWEX/NzIu/09E
        OP9AOzj/2cq6///u2v/+7Nj//+/a/6eYiP9iYmL/S0tM7RUVGC8iIiQAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAVFRgPNDQ1xnBvcP94cmv//uzY//7s2P/+7Nj/9+bT/2FbVv93Ykr/SUA2/5x+Xf9+aE//XE4//6+N
        Zv9KQDf/fWZN/0tFP//ez77//+7a//7s2P//79r/p5iI/2JiYv9LS0ztFRUYLyIiJAAAAAAAAAAAAAAA
        AAAAAAAAAAAAABUVGA80NDXGcG9w/3hya//+7Nj//uzY//7s2P//7tn/jIR7/3plTP9mVkT/inFU/3Vh
        S/9WSTz/oIJe/1RIO/+RdVb/Zl9Z//Xk0f//7dj//uzY///v2v+nmIj/YmJi/0tLTO0VFRgvIiIkAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAFRUYDzQ0NcZwb3D/eHJr//7s2P/+7Nj//uzY///u2v/bzLz/T0pF/zIu
        Kv8pJyf/QDky/zs1MP8xLiv/LCko/0A6Nf+3q57//+7a//7s2P/+7Nj//+/a/6eYiP9iYmL/S0tM7RUV
        GC8iIiQAAAAAAAAAAAAAAAAAAAAAAAAAAAAVFRgPNDQ1xnBvcP95cmz//+7a///u2v//7tr//+7a///w
        2//Dt6n/SkdE/ycmJv8zLyv/Mi4r/yooJ/85Njb/oJaM//zs2P//7tr//+7a///u2v//8dz/p5mK/2Ji
        Yv9LS0ztFRUYLyIiJAAAAAAAAAAAAAAAAAAAAAAAAAAAABUVGA80NDbFcHBw/2dhXP/UxbX/1MW1/9TF
        tf/UxbX/1MW1/9XGtv+2qZz/bWdh/z89PP86ODj/XFhU/6OZjv/TxLT/1MW1/9TFtf/UxbX/1MW1/9fH
        t/+Mf3T/YmFh/0tLTO0VFRcvIiIkAAAAAAAAAAAAAAAAAAAAAAAAAAAAFxcaCSwsLrh4d3f/VlVV/1hW
        Vv9YVlb/WFZW/1hWVv9YVlb/WFZW/1pYV/9aWVj/VVRU/1RTU/9ZWFf/WllY/1hWVv9YVlb/WFZW/1hW
        Vv9YVlb/WFZW/1JQUP94d3f/Pz9A4xsbHTciIiQlIiIkICIiJBYiIiQXISEkACIiJAAiIiQAICAiWj4+
        P+thYWH/YmJi/2JiYv5hYWH/YGBh/2JiYv9iYWL/YmFi/2JiYv9iYmL/YmJi/2JiYv9iYWL/YmFi/2Ji
        Yv9hYGH/YGBh/2JiYv5iYmL/Y2Jj/0tLTPckJCaEIiIkXyIiJKUiIiSmIiIkiCIiJJMiIiQCIiIkACIi
        JAAkJCYEGxsdNxsbHWEbGx1hHBwfpzkzLf+OdFX/pYVf/6eGYP+ig17/SD80/0xBNv9HPjT/QDgw/5B2
        Vv+piGH/pIRf/5x+W/9OQzf/Hh4gyRsbHWYbGx1iHBweVSIiJEIiIiS0IiIkjyIiJL0iIiSXIiIkmyIi
        JAAiIiQAAAAAAAAAAAAAAAAAIiIkABYZHwgpJye0roxl/9Opdv90YUr/lHhZ/+y7gv9mVkT/bFtH/2RV
        Q/9YTD3/2a15/7KPZ/9uXEf/t5Np/9Oodf8+Ni/gFxogJCIiJAAiIiRRIiIkvyIiJJQiIiSiIiIkpCIi
        JK8iIiRnIiIkACIiJAAAAAAAAAAAAAAAAAAiIiQAFRgeEzUwLdHRqHb/cV9J/192P/9FUDT/WEo9/0U8
        NP9xXkn/Z1ZE/09FOf9aTD7/PT8x/2mDRP9PSzn/3Kxy/1VGNPMVGSA5IiIkACIiJD0iIiSiIiIkuSIi
        JKwiIiSMIiIkvCIiJBoiIiQAAAAAAAAAAAAAAAAAAAAAACIiJAAXGh8FJSQlp5V5Wf+IcFP/R1I1/0pK
        Nv+cfl3/vplt/45zVv9pV0X/w5xv/6uKZP9YTz3/SVc2/2ZWPP+xhlP/Ni8p1RgcIRwiIiQAIiIkOCIi
        JJsiIiSPIiIkoiIiJMIiIiQ8IiIkACIiJAAAAAAAAAAAAAAAAAAAAAAAIyMkACEhIwAeHyI0Lisq0o91
        Vv+5k2r/zqR0///MjP/SqXf/TUo4/0BEMv+si2T//86N/9+yfP+zjWP/iWlD/zwzK+YfICNbFBghACIi
        JAAiIiQ9IiIkuiIiJLgiIiSJIiIkJiIiJAAiIiQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIiIkAB8g
        IwAWGR5eaVlF/fzKi///y4v//8yM/6iGYv9MWzf/YXpA/3VhS//+yYr//8yM//C7d/9TQzL0FRkgUwAA
        AwAhIiQAIiIkACIiJAgiIiQbIiIkDyIiJAEiIiQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAIiIkABgaHyxCOjPm3LB6///Mi///yov/47R+/25eSP9eUj7/yKBx///Miv/4v3r/k3BH/ygm
        JbUbHiIOIiIkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAiIiQAHh8iAyAhI4tqWUb+47R9///Kiv//yoj/7LZ1/556UP+LcE//l3VO/2dR
        Of0rKCbCHR8jLh8gIwAiIiQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhISMAHyAjEyEhJJFJQDbuf2ZK/4hrSP9fTDb4Kicmvxwd
        IYUeHiKJGhwhXxweIhcVGSAAIiIkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAeHyIAHyAjCBkbIEMaHCCBGx0hihgb
        IVwcHiIWFBkgACIiJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA8AADD/AAAAPwAAAB8AAAAfgAAACAAAAAgAAAAAAAAAEAAAABAAAAAwAA
        AAMAAAAfAAAAPwAAAD8AAAA/AAAAPwAAAD8AAAA/AAAAPwAAAD8AAAADgAAAAYAAAAPwAAID8AACA/AA
        Agf4AAYP/AAOH/wAD//8AB///gA///8D//8=
</value>
  </data>
</root>